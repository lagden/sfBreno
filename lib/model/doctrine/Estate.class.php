<?php

/**
* Estate
* 
* This class has been auto-generated by the Doctrine ORM Framework
* 
* @package    sfProject
* @subpackage model
* @author     Thiago Lagden
* @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
*/
class Estate extends BaseEstate
{
    public function getImageDestaque()
    {
        return Doctrine_Core::getTable('Image')->findOneByEstateIdAndDestaque($this->id,1);
        return false;
    }

    public function setPriceRent($price)
    {
        if($price) $this->_set('price_rent', static::floatPrice($price));
        return $this;
    }

    public function setPriceSale($price)
    {
        if($price) $this->_set('price_sale', static::floatPrice($price));
        return $this;
    }

    public function setIptu($price)
    {
        if($price) $this->_set('iptu', static::floatPrice($price));
        return $this;
    }

    public function setCondominio($price)
    {
        if($price) $this->_set('condominio', static::floatPrice($price));
        return $this;
    }

    public function getJoinDisponibilidades()
    {
        return Utils::getJoin($this->Disponibilidades);
    }

    public function getJoinTags()
    {
        return Utils::getJoin($this->Tags);
    }

    public function getValorVenda()
    {
        return static::getCurrency($this->price_sale);
    }

    public function getValorAluga()
    {
        return static::getCurrency($this->price_rent);
    }

    public function getAtivado()
    {
        return static::getBool($this->ativo);
    }

    public function getEmDestaque()
    {
        return static::getBool($this->destaque);
    }

    static public function floatPrice($v)
    {
        if(strpos($v,',') === false)
        {
            $r = $v;
        }
        else
        {
            $r = str_replace('.','',$v);
            $r = str_replace(',','.',$r);
        }
        return $r;
    }

    static public function getBool($v)
    {
        return ($v) ? "Sim" : "NÃ£o";
    }

    static public function getCurrency($v,$t="real")
    {
        $r=0;
        switch($t)
        {
            case 'dollar':
            $r=number_format($v, 2, '.', ',');
            break;

            default:
            $r=number_format($v, 2, ',', '.');
        }
        return $r; 
    }

    static public function getJoin($es,$f='name')
    {
        $arr = array();
        foreach ($es as $e) {
            $arr[]=$e->$f;
        }
        return join(', ',$arr);
    }
}
