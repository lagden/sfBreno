#!/bin/bash

THIS=$(basename $0)
DIR="$( cd -P "$( dirname "$0" )" && pwd )"
cd $DIR
cd ..
CURR_FOLDER=`pwd`

usage()
{
cat << EOF
usage: $0 options

This script prepare the symfony project.

OPTIONS:
   -h      Show this message
   -p      Project name - eg.: ./setup -p sfProject
   -a      Author name - eg.: ./setup -p sfProject -a Me
   -f      Creating and fixing folders permissions
EOF
}

IGNORE_P=0
AUTHOR="Thiago Lagden"
PROJECT=false

while getopts "hp:a:f" OPT; do
    case $OPT in
    f) IGNORE_P=1; PROJECT=true;;
    p) PROJECT=$OPTARG;;
    a) AUTHOR=$OPTARG;;
    h|\?) usage; exit;;
    esac
done

if [[ $PROJECT == false ]]; then
    usage
    exit
fi

# Go
cd $CURR_FOLDER

# Installs symfony anyway
vendor_folder="$CURR_FOLDER/lib/vendor"
vendor_symfony_folder="$CURR_FOLDER/lib/vendor/symfony"

TOTALFILES=1;

if [ ! -d $vendor_folder ]; then
    mkdir $vendor_folder
fi

if [ -d $vendor_symfony_folder ]
then
    TOTALFILES=`find ${vendor_symfony_folder}/. -type f | wc -l`
fi

if [ ! -d $vendor_symfony_folder ] || [ $TOTALFILES == 0 ]
then
    echo "Installing Symfony"

    cd $vendor_folder
    rm -rf $vendor_symfony_folder

    # downloading
    echo "Downloading Symfony"
    curl -o symfony.tar.gz 'https://codeload.github.com/symfony/symfony1/tar.gz/1.4'

    echo "Extracting..."
    tar xzf symfony.tar.gz
    mv symfony1-1.4 symfony
    rm symfony.tar.gz

    # fix permission
    find ./ -type d -print0 |xargs -0 chmod 755 && find ./ -type f -print0 |xargs -0 chmod 644
fi

# Go
cd $CURR_FOLDER

plugins="$CURR_FOLDER/plugins"
plugin_sortable="$CURR_FOLDER/plugins/csDoctrineActAsSortablePlugin/"

if [ ! -d $plugins ]; then
    mkdir $plugins
fi

if [ ! -d $plugin_sortable ]
then
    # downloading
    echo "Downloading csDoctrineActAsSortablePlugin/"
    curl -o csDoctrineActAsSortablePlugin.tar.gz 'https://codeload.github.com/bshaffer/csDoctrineActAsSortablePlugin/tar.gz/master'

    echo "Extracting..."
    tar xzf csDoctrineActAsSortablePlugin.tar.gz
    mv csDoctrineActAsSortablePlugin-master $plugin_sortable
    rm csDoctrineActAsSortablePlugin.tar.gz

    cd $plugin_sortable
    find ./ -type d -print0 |xargs -0 chmod 755 && find ./ -type f -print0 |xargs -0 chmod 644
fi

# Go
cd $CURR_FOLDER

# generate project
if [ ! -d "$CURR_FOLDER/config" ] && [ $IGNORE_P = 0 ]
then
    lib/vendor/symfony/data/bin/symfony generate:project "$PROJECT" "$AUTHOR"
    cp lib/vendor/symfony/data/bin/symfony ./
    ./symfony configure:database "mysql:host=localhost;dbname=db" root
else
    echo "Project already exists"
fi

# Go
cd $CURR_FOLDER

if [ $IGNORE_P = 1 ] && [ -d "$CURR_FOLDER/config" ]; then
    required_folders="log cache"
    for folder in $required_folders
    do
        if [ ! -d $folder ]
        then
            mkdir -p -m777 $folder
            echo "Creating $folder folder."
        else
            chmod 777 $folder
            echo "Fixing permissions on $folder"
        fi
    done
fi

# Go
cd $CURR_FOLDER

# linking the sf web and dev resources
folders="web"
for folder in $folders
do
    if [ ! -e $folder/sf ] && [ -d $folder ]
    then
        echo "Creating link to /sf resources"
        ln -sf ../lib/vendor/symfony/data/web/sf $folder/sf
    fi
done

exit
